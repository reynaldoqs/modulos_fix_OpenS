{"remainingRequest":"/home/reynaldo/Escritorio/interoparabilidad/interope-cliente/iop-plataforma-frontend/node_modules/babel-loader/lib/index.js!/home/reynaldo/Escritorio/interoparabilidad/interope-cliente/iop-plataforma-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/reynaldo/Escritorio/interoparabilidad/interope-cliente/iop-plataforma-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/reynaldo/Escritorio/interoparabilidad/interope-cliente/iop-plataforma-frontend/src/Usuario/components/composicion/Composicion.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/reynaldo/Escritorio/interoparabilidad/interope-cliente/iop-plataforma-frontend/src/Usuario/components/composicion/Composicion.vue","mtime":1544034483268},{"path":"/home/reynaldo/Escritorio/interoparabilidad/interope-cliente/iop-plataforma-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/reynaldo/Escritorio/interoparabilidad/interope-cliente/iop-plataforma-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/reynaldo/Escritorio/interoparabilidad/interope-cliente/iop-plataforma-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/reynaldo/Escritorio/interoparabilidad/interope-cliente/iop-plataforma-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.regexp.to-string\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport SearchBar from \"./SearchBar\";\nimport ParametrosList from \"./ParametrosList\";\nimport { composicionApi } from \"@/services\";\nexport default {\n  data: function data() {\n    return {\n      drawer: true,\n      colorAlert: \"primary\",\n      userParametros: [],\n      parametros: [],\n      serviciosList: [],\n      serviciosFilter: [],\n      query: {},\n      loading: false\n    };\n  },\n  methods: {\n    filterChanged: function filterChanged(data) {\n      this.serviciosFilter = data;\n    },\n    search: function search(query) {\n      this.query = query; //mejorar, si aun tiene el foco, no quitar el drawer\n    },\n    openSaveComposicion: function openSaveComposicion() {\n      this.$hub.$emit(\"open-modal\");\n      this.$hub.$emit(\"set-modal-data\", {}, \"Guardar Composicion\", \"success\");\n    },\n    saveComposicion: function saveComposicion(data) {\n      var _this = this;\n\n      var nombre = data.nombre,\n          descripcion = data.descripcion,\n          formato = data.formato;\n      var idPerfil = this.$store.getters.currentPerfil.id;\n      var clonModel = JSON.parse(JSON.stringify(this.composicionModel));\n      var composicionToSave = {\n        nombre: nombre,\n        descripcion: descripcion,\n        formato: formato,\n        rutas: clonModel.rutas.map(function (rata) {\n          return {\n            ruta: rata.ruta._id,\n            servicio: rata.servicio._id,\n            parametrosEntrada: rata.parametrosEntrada.map(function (p) {\n              return p._id;\n            }),\n            parametrosRespuesta: rata.parametrosRespuesta.map(function (p) {\n              return {\n                parametroRespuesta: p.parametroRespuesta._id\n              };\n            })\n          };\n        })\n      };\n      composicionApi.guardarComposicion({\n        idPerfil: idPerfil,\n        composicion: composicionToSave\n      }).then(function (data) {\n        _this.$q.notify({\n          message: \"Composición guardado correctamente\",\n          type: \"positive\",\n          color: \"positive\",\n          textColor: \"white\",\n          icon: \"verified_user\",\n          position: \"top-right\"\n        }); //guadar en el store aqui\n\n\n        _this.userParametros = [];\n      }).catch(function (err) {\n        _this.$q.notify({\n          message: err.data.message.toString(),\n          type: \"negative\",\n          color: \"negative\",\n          textColor: \"white\",\n          icon: \"error\",\n          position: \"top-right\"\n        });\n      });\n    },\n    deleteParametro: function deleteParametro(id) {\n      var index = this.userParametros.findIndex(function (data) {\n        return data._id === id;\n      });\n\n      if (index !== -1) {\n        this.userParametros.splice(index, 1);\n      }\n    },\n    selectParametro: function selectParametro(parametro) {\n      var selectedObj = JSON.parse(JSON.stringify(parametro));\n\n      if (this.userParametros.length === 0) {\n        this.userParametros.push(selectedObj);\n        return;\n      }\n\n      this.checkAndPush(this.userParametros, selectedObj);\n    },\n    checkAndPush: function checkAndPush(anArray, anObject) {\n      if (anArray.find(function (data) {\n        return data._id === anObject._id;\n      })) {\n        this.$q.dialog({\n          title: \"Elemento repetido\",\n          message: \"Ya tiene este parámetro seleccionado\",\n          ok: \"Aceptar\",\n          color: \"grey\"\n        });\n        return;\n      }\n\n      anArray.push(anObject);\n    },\n    loadParametros: function loadParametros() {\n      var _this2 = this;\n\n      this.loading = true;\n      composicionApi.parametros().then(function (data) {\n        _this2.serviciosList = data.data.map(function (data) {\n          return data.idRespuesta.idRuta.idServicio;\n        });\n        _this2.parametros = data.data;\n        _this2.loading = false;\n      }).catch(function (err) {\n        return _this2.loading = false;\n      });\n    },\n    getComposicionModel: function getComposicionModel(anArray) {\n      var rutas = []; //obtiene identificadores para agruparlos\n\n      anArray.map(function (data) {\n        if (rutas.findIndex(function (i) {\n          return data.idRespuesta.idRuta._id === i;\n        }) === -1) {\n          rutas.push(data.idRespuesta.idRuta._id);\n        }\n      }); // los agrupa por los identificadores\n\n      var rutasGroups = rutas.map(function (ruta) {\n        var elements = anArray.filter(function (data) {\n          return data.idRespuesta.idRuta._id === ruta;\n        });\n        return elements;\n      }); // construimos el modelo de composicon\n\n      var composiconModel = {\n        descripcion: null,\n        nombre: null,\n        rutas: rutasGroups.map(function (group) {\n          return {\n            //poner los key des descripcion de uso\n            parametrosEntrada: group[0].parametrosEntrada,\n            ruta: group[0].idRespuesta.idRuta,\n            servicio: group[0].idRespuesta.idRuta.idServicio,\n            parametrosRespuesta: group.map(function (subRuta) {\n              return {\n                parametroRespuesta: {\n                  _id: subRuta._id,\n                  nombre: subRuta.nombre,\n                  descripcion: subRuta.descripcion,\n                  tipo: subRuta.tipo,\n                  valorEjemplo: subRuta.valorEjemplo\n                }\n              };\n            })\n          };\n        })\n      };\n      return composiconModel;\n    }\n  },\n  computed: {\n    composicionModel: function composicionModel() {\n      return this.getComposicionModel(this.userParametros);\n    }\n  },\n  mounted: function mounted() {\n    this.loadParametros();\n    this.$hub.$on(\"saveComposicion\", this.saveComposicion);\n  },\n  components: {\n    SearchBar: SearchBar,\n    ParametrosList: ParametrosList\n  },\n  destroyed: function destroyed() {\n    this.$hub.$off(\"saveComposicion\");\n  }\n};",{"version":3,"sources":["Composicion.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA,OAAA,SAAA,MAAA,aAAA;AACA,OAAA,cAAA,MAAA,kBAAA;AACA,SAAA,cAAA,QAAA,YAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,MAAA,EAAA,IADA;AAEA,MAAA,UAAA,EAAA,SAFA;AAGA,MAAA,cAAA,EAAA,EAHA;AAIA,MAAA,UAAA,EAAA,EAJA;AAKA,MAAA,aAAA,EAAA,EALA;AAMA,MAAA,eAAA,EAAA,EANA;AAOA,MAAA,KAAA,EAAA,EAPA;AAQA,MAAA,OAAA,EAAA;AARA,KAAA;AAAA,GADA;AAWA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,yBACA,IADA,EACA;AACA,WAAA,eAAA,GAAA,IAAA;AACA,KAHA;AAIA,IAAA,MAJA,kBAIA,KAJA,EAIA;AACA,WAAA,KAAA,GAAA,KAAA,CADA,CAEA;AACA,KAPA;AAQA,IAAA,mBARA,iCAQA;AACA,WAAA,IAAA,CAAA,KAAA,CAAA,YAAA;AACA,WAAA,IAAA,CAAA,KAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,qBAAA,EAAA,SAAA;AACA,KAXA;AAYA,IAAA,eAZA,2BAYA,IAZA,EAYA;AAAA;;AAAA,UACA,MADA,GACA,IADA,CACA,MADA;AAAA,UACA,WADA,GACA,IADA,CACA,WADA;AAAA,UACA,OADA,GACA,IADA,CACA,OADA;AAEA,UAAA,QAAA,GAAA,KAAA,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,EAAA;AACA,UAAA,SAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,SAAA,CAAA,KAAA,gBAAA,CAAA,CAAA;AACA,UAAA,iBAAA,GAAA;AACA,QAAA,MAAA,EAAA,MADA;AAEA,QAAA,WAAA,EAAA,WAFA;AAGA,QAAA,OAAA,EAAA,OAHA;AAIA,QAAA,KAAA,EAAA,SAAA,CAAA,KAAA,CAAA,GAAA,CAAA,UAAA,IAAA,EAAA;AACA,iBAAA;AACA,YAAA,IAAA,EAAA,IAAA,CAAA,IAAA,CAAA,GADA;AAEA,YAAA,QAAA,EAAA,IAAA,CAAA,QAAA,CAAA,GAFA;AAGA,YAAA,iBAAA,EAAA,IAAA,CAAA,iBAAA,CAAA,GAAA,CAAA,UAAA,CAAA;AAAA,qBAAA,CAAA,CAAA,GAAA;AAAA,aAAA,CAHA;AAIA,YAAA,mBAAA,EAAA,IAAA,CAAA,mBAAA,CAAA,GAAA,CAAA,UAAA,CAAA;AAAA,qBAAA;AACA,gBAAA,kBAAA,EAAA,CAAA,CAAA,kBAAA,CAAA;AADA,eAAA;AAAA,aAAA;AAJA,WAAA;AAQA,SATA;AAJA,OAAA;AAgBA,MAAA,cAAA,CACA,kBADA,CACA;AACA,QAAA,QAAA,EAAA,QADA;AAEA,QAAA,WAAA,EAAA;AAFA,OADA,EAKA,IALA,CAKA,UAAA,IAAA,EAAA;AACA,QAAA,KAAA,CAAA,EAAA,CAAA,MAAA,CAAA;AACA,UAAA,OAAA,EAAA,oCADA;AAEA,UAAA,IAAA,EAAA,UAFA;AAGA,UAAA,KAAA,EAAA,UAHA;AAIA,UAAA,SAAA,EAAA,OAJA;AAKA,UAAA,IAAA,EAAA,eALA;AAMA,UAAA,QAAA,EAAA;AANA,SAAA,EADA,CASA;;;AACA,QAAA,KAAA,CAAA,cAAA,GAAA,EAAA;AACA,OAhBA,EAiBA,KAjBA,CAiBA,UAAA,GAAA,EAAA;AACA,QAAA,KAAA,CAAA,EAAA,CAAA,MAAA,CAAA;AACA,UAAA,OAAA,EAAA,GAAA,CAAA,IAAA,CAAA,OAAA,CAAA,QAAA,EADA;AAEA,UAAA,IAAA,EAAA,UAFA;AAGA,UAAA,KAAA,EAAA,UAHA;AAIA,UAAA,SAAA,EAAA,OAJA;AAKA,UAAA,IAAA,EAAA,OALA;AAMA,UAAA,QAAA,EAAA;AANA,SAAA;AAQA,OA1BA;AA2BA,KA3DA;AA4DA,IAAA,eA5DA,2BA4DA,EA5DA,EA4DA;AACA,UAAA,KAAA,GAAA,KAAA,cAAA,CAAA,SAAA,CAAA,UAAA,IAAA;AAAA,eAAA,IAAA,CAAA,GAAA,KAAA,EAAA;AAAA,OAAA,CAAA;;AACA,UAAA,KAAA,KAAA,CAAA,CAAA,EAAA;AACA,aAAA,cAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA;AACA;AACA,KAjEA;AAkEA,IAAA,eAlEA,2BAkEA,SAlEA,EAkEA;AACA,UAAA,WAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,SAAA,CAAA,SAAA,CAAA,CAAA;;AACA,UAAA,KAAA,cAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA,aAAA,cAAA,CAAA,IAAA,CAAA,WAAA;AACA;AACA;;AACA,WAAA,YAAA,CAAA,KAAA,cAAA,EAAA,WAAA;AACA,KAzEA;AA0EA,IAAA,YA1EA,wBA0EA,OA1EA,EA0EA,QA1EA,EA0EA;AACA,UAAA,OAAA,CAAA,IAAA,CAAA,UAAA,IAAA;AAAA,eAAA,IAAA,CAAA,GAAA,KAAA,QAAA,CAAA,GAAA;AAAA,OAAA,CAAA,EAAA;AACA,aAAA,EAAA,CAAA,MAAA,CAAA;AACA,UAAA,KAAA,EAAA,mBADA;AAEA,UAAA,OAAA,EAAA,sCAFA;AAGA,UAAA,EAAA,EAAA,SAHA;AAIA,UAAA,KAAA,EAAA;AAJA,SAAA;AAMA;AACA;;AACA,MAAA,OAAA,CAAA,IAAA,CAAA,QAAA;AACA,KArFA;AAsFA,IAAA,cAtFA,4BAsFA;AAAA;;AACA,WAAA,OAAA,GAAA,IAAA;AACA,MAAA,cAAA,CACA,UADA,GAEA,IAFA,CAEA,UAAA,IAAA,EAAA;AACA,QAAA,MAAA,CAAA,aAAA,GAAA,IAAA,CAAA,IAAA,CAAA,GAAA,CACA,UAAA,IAAA;AAAA,iBAAA,IAAA,CAAA,WAAA,CAAA,MAAA,CAAA,UAAA;AAAA,SADA,CAAA;AAGA,QAAA,MAAA,CAAA,UAAA,GAAA,IAAA,CAAA,IAAA;AACA,QAAA,MAAA,CAAA,OAAA,GAAA,KAAA;AACA,OARA,EASA,KATA,CASA,UAAA,GAAA;AAAA,eAAA,MAAA,CAAA,OAAA,GAAA,KAAA;AAAA,OATA;AAUA,KAlGA;AAmGA,IAAA,mBAnGA,+BAmGA,OAnGA,EAmGA;AACA,UAAA,KAAA,GAAA,EAAA,CADA,CAEA;;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,UAAA,IAAA,EAAA;AACA,YAAA,KAAA,CAAA,SAAA,CAAA,UAAA,CAAA;AAAA,iBAAA,IAAA,CAAA,WAAA,CAAA,MAAA,CAAA,GAAA,KAAA,CAAA;AAAA,SAAA,MAAA,CAAA,CAAA,EAAA;AACA,UAAA,KAAA,CAAA,IAAA,CAAA,IAAA,CAAA,WAAA,CAAA,MAAA,CAAA,GAAA;AACA;AACA,OAJA,EAHA,CAQA;;AACA,UAAA,WAAA,GAAA,KAAA,CAAA,GAAA,CAAA,UAAA,IAAA,EAAA;AACA,YAAA,QAAA,GAAA,OAAA,CAAA,MAAA,CACA,UAAA,IAAA;AAAA,iBAAA,IAAA,CAAA,WAAA,CAAA,MAAA,CAAA,GAAA,KAAA,IAAA;AAAA,SADA,CAAA;AAGA,eAAA,QAAA;AACA,OALA,CAAA,CATA,CAeA;;AACA,UAAA,eAAA,GAAA;AACA,QAAA,WAAA,EAAA,IADA;AAEA,QAAA,MAAA,EAAA,IAFA;AAGA,QAAA,KAAA,EAAA,WAAA,CAAA,GAAA,CAAA,UAAA,KAAA,EAAA;AACA,iBAAA;AACA;AACA,YAAA,iBAAA,EAAA,KAAA,CAAA,CAAA,CAAA,CAAA,iBAFA;AAGA,YAAA,IAAA,EAAA,KAAA,CAAA,CAAA,CAAA,CAAA,WAAA,CAAA,MAHA;AAIA,YAAA,QAAA,EAAA,KAAA,CAAA,CAAA,CAAA,CAAA,WAAA,CAAA,MAAA,CAAA,UAJA;AAKA,YAAA,mBAAA,EAAA,KAAA,CAAA,GAAA,CAAA,UAAA,OAAA,EAAA;AACA,qBAAA;AACA,gBAAA,kBAAA,EAAA;AACA,kBAAA,GAAA,EAAA,OAAA,CAAA,GADA;AAEA,kBAAA,MAAA,EAAA,OAAA,CAAA,MAFA;AAGA,kBAAA,WAAA,EAAA,OAAA,CAAA,WAHA;AAIA,kBAAA,IAAA,EAAA,OAAA,CAAA,IAJA;AAKA,kBAAA,YAAA,EAAA,OAAA,CAAA;AALA;AADA,eAAA;AASA,aAVA;AALA,WAAA;AAiBA,SAlBA;AAHA,OAAA;AAuBA,aAAA,eAAA;AACA;AA3IA,GAXA;AAwJA,EAAA,QAAA,EAAA;AACA,IAAA,gBADA,8BACA;AACA,aAAA,KAAA,mBAAA,CAAA,KAAA,cAAA,CAAA;AACA;AAHA,GAxJA;AA6JA,EAAA,OA7JA,qBA6JA;AACA,SAAA,cAAA;AACA,SAAA,IAAA,CAAA,GAAA,CAAA,iBAAA,EAAA,KAAA,eAAA;AACA,GAhKA;AAiKA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA,SADA;AAEA,IAAA,cAAA,EAAA;AAFA,GAjKA;AAqKA,EAAA,SArKA,uBAqKA;AACA,SAAA,IAAA,CAAA,IAAA,CAAA,iBAAA;AACA;AAvKA,CAAA","sourcesContent":["<template>\n  <div class=\"composicion-container\">\n    <div class=\"composicion-list\">\n      <q-layout-drawer\n        content-class=\"tertiary\"\n        v-model=\"drawer\"\n        :content-style=\"{padding: '0', background:'#ff0000'}\"\n        side=\"left\"\n        :width=\"370\"\n      >\n        <div class=\"left\">\n          <search-bar\n            :composicionModel=\"composicionModel\"\n            :serviciosList=\"serviciosList\"\n            @onQuery=\"search\"\n            @onDelete=\"deleteParametro\"\n            @filterChange=\"filterChanged\"\n          />\n          <q-btn\n            @click.stop=\"openSaveComposicion\"\n            :disabled=\"!composicionModel.rutas.length > 0\"\n            class=\"save-option\"\n            round\n            size=\"md\"\n            color=\"positive\"\n            glossy\n            icon=\"save\"\n          ></q-btn>\n        </div>\n      </q-layout-drawer>\n      <div class=\"right\" id=\"parametros-list\">\n        <div class=\"loading-container\" v-show=\"loading\">\n          <q-spinner size=\"50px\"/>\n        </div>\n        <parametros-list\n          v-show=\"!loading\"\n          :parametros=\"parametros\"\n          :serviciosFilter=\"serviciosFilter\"\n          :query=\"query\"\n          @onSelect=\"selectParametro\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport SearchBar from \"./SearchBar\";\nimport ParametrosList from \"./ParametrosList\";\nimport { composicionApi } from \"@/services\";\nexport default {\n  data: () => ({\n    drawer: true,\n    colorAlert: \"primary\",\n    userParametros: [],\n    parametros: [],\n    serviciosList: [],\n    serviciosFilter: [],\n    query: {},\n    loading: false\n  }),\n  methods: {\n    filterChanged(data) {\n      this.serviciosFilter = data;\n    },\n    search(query) {\n      this.query = query;\n      //mejorar, si aun tiene el foco, no quitar el drawer\n    },\n    openSaveComposicion() {\n      this.$hub.$emit(\"open-modal\");\n      this.$hub.$emit(\"set-modal-data\", {}, \"Guardar Composicion\", \"success\");\n    },\n    saveComposicion(data) {\n      const { nombre, descripcion, formato } = data;\n      let idPerfil = this.$store.getters.currentPerfil.id;\n      let clonModel = JSON.parse(JSON.stringify(this.composicionModel));\n      let composicionToSave = {\n        nombre: nombre,\n        descripcion: descripcion,\n        formato: formato,\n        rutas: clonModel.rutas.map(rata => {\n          return {\n            ruta: rata.ruta._id,\n            servicio: rata.servicio._id,\n            parametrosEntrada: rata.parametrosEntrada.map(p => p._id),\n            parametrosRespuesta: rata.parametrosRespuesta.map(p => ({\n              parametroRespuesta: p.parametroRespuesta._id\n            }))\n          };\n        })\n      };\n\n      composicionApi\n        .guardarComposicion({\n          idPerfil,\n          composicion: composicionToSave\n        })\n        .then(data => {\n          this.$q.notify({\n            message: \"Composición guardado correctamente\",\n            type: \"positive\",\n            color: \"positive\",\n            textColor: \"white\",\n            icon: \"verified_user\",\n            position: \"top-right\"\n          });\n          //guadar en el store aqui\n          this.userParametros = [];\n        })\n        .catch(err => {\n          this.$q.notify({\n            message: err.data.message.toString(),\n            type: \"negative\",\n            color: \"negative\",\n            textColor: \"white\",\n            icon: \"error\",\n            position: \"top-right\"\n          });\n        });\n    },\n    deleteParametro(id) {\n      let index = this.userParametros.findIndex(data => data._id === id);\n      if (index !== -1) {\n        this.userParametros.splice(index, 1);\n      }\n    },\n    selectParametro(parametro) {\n      let selectedObj = JSON.parse(JSON.stringify(parametro));\n      if (this.userParametros.length === 0) {\n        this.userParametros.push(selectedObj);\n        return;\n      }\n      this.checkAndPush(this.userParametros, selectedObj);\n    },\n    checkAndPush(anArray, anObject) {\n      if (anArray.find(data => data._id === anObject._id)) {\n        this.$q.dialog({\n          title: \"Elemento repetido\",\n          message: \"Ya tiene este parámetro seleccionado\",\n          ok: \"Aceptar\",\n          color: \"grey\"\n        });\n        return;\n      }\n      anArray.push(anObject);\n    },\n    loadParametros() {\n      this.loading = true;\n      composicionApi\n        .parametros()\n        .then(data => {\n          this.serviciosList = data.data.map(\n            data => data.idRespuesta.idRuta.idServicio\n          );\n          this.parametros = data.data;\n          this.loading = false;\n        })\n        .catch(err => (this.loading = false));\n    },\n    getComposicionModel(anArray) {\n      let rutas = [];\n      //obtiene identificadores para agruparlos\n      anArray.map(data => {\n        if (rutas.findIndex(i => data.idRespuesta.idRuta._id === i) === -1) {\n          rutas.push(data.idRespuesta.idRuta._id);\n        }\n      });\n      // los agrupa por los identificadores\n      let rutasGroups = rutas.map(ruta => {\n        let elements = anArray.filter(\n          data => data.idRespuesta.idRuta._id === ruta\n        );\n        return elements;\n      });\n      // construimos el modelo de composicon\n      let composiconModel = {\n        descripcion: null,\n        nombre: null,\n        rutas: rutasGroups.map(group => {\n          return {\n            //poner los key des descripcion de uso\n            parametrosEntrada: group[0].parametrosEntrada,\n            ruta: group[0].idRespuesta.idRuta,\n            servicio: group[0].idRespuesta.idRuta.idServicio,\n            parametrosRespuesta: group.map(subRuta => {\n              return {\n                parametroRespuesta: {\n                  _id: subRuta._id,\n                  nombre: subRuta.nombre,\n                  descripcion: subRuta.descripcion,\n                  tipo: subRuta.tipo,\n                  valorEjemplo: subRuta.valorEjemplo\n                }\n              };\n            })\n          };\n        })\n      };\n      return composiconModel;\n    }\n  },\n  computed: {\n    composicionModel() {\n      return this.getComposicionModel(this.userParametros);\n    }\n  },\n  mounted() {\n    this.loadParametros();\n    this.$hub.$on(\"saveComposicion\", this.saveComposicion);\n  },\n  components: {\n    SearchBar,\n    ParametrosList\n  },\n  destroyed() {\n    this.$hub.$off(\"saveComposicion\");\n  }\n};\n</script>\n\n<style scoped>\n.composicion-container {\n  width: 100%;\n  height: 100%;\n}\n.composicion-list {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  --left-width: 480px;\n}\n.left {\n  width: 100%;\n  height: 100%;\n  max-height: 100%;\n  overflow-y: auto;\n  overflow-x: hidden;\n  position: relative;\n}\n.right {\n  width: 100%;\n  height: 100%;\n  max-height: 100%;\n  overflow-y: auto;\n  overflow-x: hidden;\n}\n.save-option {\n  position: absolute;\n  top: 15px;\n  right: 20px;\n}\n.loading-container {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n</style>\n"],"sourceRoot":"src/Usuario/components/composicion"}]}