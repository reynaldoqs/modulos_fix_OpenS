{"remainingRequest":"/home/reynaldo/Escritorio/interoparabilidad/interope-cliente/iop-plataforma-frontend/node_modules/babel-loader/lib/index.js!/home/reynaldo/Escritorio/interoparabilidad/interope-cliente/iop-plataforma-frontend/node_modules/eslint-loader/index.js??ref--13-0!/home/reynaldo/Escritorio/interoparabilidad/interope-cliente/iop-plataforma-frontend/src/Usuario/store/modules/perfil.js","dependencies":[{"path":"/home/reynaldo/Escritorio/interoparabilidad/interope-cliente/iop-plataforma-frontend/src/Usuario/store/modules/perfil.js","mtime":1543864787258},{"path":"/home/reynaldo/Escritorio/interoparabilidad/interope-cliente/iop-plataforma-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/reynaldo/Escritorio/interoparabilidad/interope-cliente/iop-plataforma-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/reynaldo/Escritorio/interoparabilidad/interope-cliente/iop-plataforma-frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport _defineProperty from \"/home/reynaldo/Escritorio/interoparabilidad/interope-cliente/iop-plataforma-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.array.find-index\";\n\nvar _mutations;\n\nimport { SET_PERFIL, SET_PERFILES, PERFILES_REQUEST, PERFILES_SUCCESS, PERFILES_ERROR, PUT_PERFIL, DELETE_PERFIL, PATCH_PERFIL } from '../actions/perfil';\nimport { perfilesApi } from '@/services';\nvar state = {\n  perfil: null,\n  perfiles: [],\n  perfilStatus: ''\n};\nvar getters = {\n  currentPerfil: function currentPerfil(state) {\n    return state.perfil;\n  },\n  hasPerfil: function hasPerfil(state) {\n    return !(state.perfil === '' || state.perfil === null || state.perfil === undefined);\n  },\n  userPerfiles: function userPerfiles(state) {\n    return state.perfiles;\n  }\n};\nvar mutations = (_mutations = {}, _defineProperty(_mutations, SET_PERFIL, function (state, idPerfil) {\n  var index = state.perfiles.findIndex(function (data) {\n    return data.id == idPerfil;\n  });\n  state.perfil = state.perfiles[index];\n}), _defineProperty(_mutations, SET_PERFILES, function (state, data) {\n  state.perfiles = data;\n}), _defineProperty(_mutations, PERFILES_REQUEST, function (state) {\n  state.perfilStatus = 'loading';\n}), _defineProperty(_mutations, PERFILES_SUCCESS, function (state, data) {\n  state.perfilStatus = 'success';\n  state.perfiles = data;\n}), _defineProperty(_mutations, PERFILES_ERROR, function (state) {\n  state.perfilStatus = 'error';\n}), _defineProperty(_mutations, DELETE_PERFIL, function (state, idPerfil) {\n  var index = state.perfiles.findIndex(function (data) {\n    return data.id == idPerfil;\n  });\n  state.perfiles.splice(index, 1);\n}), _defineProperty(_mutations, PATCH_PERFIL, function (state, body) {\n  var idPerfil = body.id;\n  var index = state.perfiles.findIndex(function (data) {\n    return data.id == idPerfil;\n  });\n  state.perfiles[index] = body;\n}), _defineProperty(_mutations, PUT_PERFIL, function (state, perfil) {\n  state.perfiles.push(perfil);\n}), _mutations);\nvar actions = {\n  loadPerfiles: function loadPerfiles(context, clientId) {\n    context.commit(PERFILES_REQUEST);\n    return new Promise(function (resolve, reject) {\n      perfilesApi.getPerfiles(clientId).then(function (data) {\n        var perfiles = data.data.perfiles;\n        context.commit(PERFILES_SUCCESS, perfiles);\n        resolve(data);\n      }).catch(function (err) {\n        context.commit(PERFILES_ERROR);\n        reject(err);\n      });\n    });\n  },\n  changePerfil: function changePerfil(context, idPerfil) {\n    context.commit(SET_PERFIL, idPerfil);\n  },\n  removePerfil: function removePerfil(context, datos) {\n    var clientId = datos.clientId;\n    var idPerfil = datos.idPerfil;\n    return new Promise(function (resolve, reject) {\n      perfilesApi.deletePerfil(clientId, idPerfil).then(function (data) {\n        context.commit(DELETE_PERFIL, idPerfil);\n        resolve(data);\n      }).catch(function (err) {\n        context.commit(PERFILES_ERROR);\n        reject(err);\n      });\n    });\n  },\n  savePerfil: function savePerfil(context, datos) {\n    var clientId = datos.clientId;\n    var body = {\n      nombre: datos.nombre || 'sin_data',\n      descripcion: datos.descripcion || 'sin_data',\n      urlImagen: datos.urlImagen || 'rat'\n    };\n    return new Promise(function (resolve, reject) {\n      perfilesApi.postPerfil(clientId, body).then(function (data) {\n        context.commit(PUT_PERFIL, data.data);\n        resolve(data);\n      }).catch(function (err) {\n        console.error(err.data.error.toString());\n        context.commit(PERFILES_ERROR);\n        reject('Error al crear el perfil, intentelo m√°s tarde');\n      });\n    });\n  },\n  patchPerfil: function patchPerfil(context, datos) {\n    var clientId = datos.clientId;\n    var idPerfil = datos.idPerfil;\n    var body = {\n      nombre: datos.nombre || 'sin_data',\n      descripcion: datos.descripcion || 'sin_data',\n      urlImagen: datos.urlImagen || 'rat'\n    };\n    return new Promise(function (resolve, reject) {\n      perfilesApi.patchPerfil(clientId, idPerfil, body).then(function (data) {\n        context.commit(PATCH_PERFIL, data.data);\n        resolve(data);\n      }).catch(function (err) {\n        context.commit(PERFILES_ERROR);\n        reject(err);\n      });\n    });\n  }\n};\nexport default {\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["/home/reynaldo/Escritorio/interoparabilidad/interope-cliente/iop-plataforma-frontend/src/Usuario/store/modules/perfil.js"],"names":["SET_PERFIL","SET_PERFILES","PERFILES_REQUEST","PERFILES_SUCCESS","PERFILES_ERROR","PUT_PERFIL","DELETE_PERFIL","PATCH_PERFIL","perfilesApi","state","perfil","perfiles","perfilStatus","getters","currentPerfil","hasPerfil","undefined","userPerfiles","mutations","idPerfil","index","findIndex","data","id","splice","body","push","actions","loadPerfiles","context","clientId","commit","Promise","resolve","reject","getPerfiles","then","catch","err","changePerfil","removePerfil","datos","deletePerfil","savePerfil","nombre","descripcion","urlImagen","postPerfil","console","error","toString","patchPerfil"],"mappings":"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","sourcesContent":["import {\n  SET_PERFIL,\n  SET_PERFILES,\n  PERFILES_REQUEST,\n  PERFILES_SUCCESS,\n  PERFILES_ERROR,\n  PUT_PERFIL,\n  DELETE_PERFIL,\n  PATCH_PERFIL\n} from '../actions/perfil'\nimport { perfilesApi } from '@/services'\n\nconst state = {\n  perfil: null,\n  perfiles: [],\n  perfilStatus: ''\n}\n\nconst getters = {\n  currentPerfil: state => state.perfil,\n  hasPerfil: state => {\n    return !(state.perfil === '' || state.perfil === null || state.perfil === undefined)\n  },\n  userPerfiles: state => state.perfiles\n}\n\nconst mutations = {\n  // fix: al hacer log out, eliminar el perfil seleccionar state.perfil\n  [SET_PERFIL]: (state, idPerfil) => {\n    let index = state.perfiles.findIndex(data => data.id == idPerfil)\n    state.perfil = state.perfiles[index]\n  },\n  [SET_PERFILES]: (state, data) => {\n    state.perfiles = data\n  },\n  [PERFILES_REQUEST]: state => {\n    state.perfilStatus = 'loading'\n  },\n  [PERFILES_SUCCESS]: (state, data) => {\n    state.perfilStatus = 'success'\n    state.perfiles = data\n  },\n  [PERFILES_ERROR]: state => {\n    state.perfilStatus = 'error'\n  },\n  [DELETE_PERFIL]: (state, idPerfil) => {\n    let index = state.perfiles.findIndex(data => data.id == idPerfil)\n    state.perfiles.splice(index, 1)\n  },\n  [PATCH_PERFIL]: (state, body) => {\n    let idPerfil = body.id\n    let index = state.perfiles.findIndex(data => data.id == idPerfil)\n    state.perfiles[index] = body\n  },\n  [PUT_PERFIL]: (state, perfil) => {\n    state.perfiles.push(perfil)\n  }\n}\n\nconst actions = {\n  loadPerfiles: (context, clientId) => {\n    context.commit(PERFILES_REQUEST)\n    return new Promise((resolve, reject) => {\n      perfilesApi.getPerfiles(clientId).then(data => {\n        let perfiles = data.data.perfiles\n        context.commit(PERFILES_SUCCESS, perfiles)\n        resolve(data)\n      }).catch(err => {\n        context.commit(PERFILES_ERROR)\n        reject(err)\n      })\n    })\n  },\n  changePerfil: (context, idPerfil) => {\n    context.commit(SET_PERFIL, idPerfil)\n  },\n  removePerfil: (context, datos) => {\n    let clientId = datos.clientId\n    let idPerfil = datos.idPerfil\n    return new Promise((resolve, reject) => {\n      perfilesApi.deletePerfil(clientId, idPerfil).then(data => {\n        context.commit(DELETE_PERFIL, idPerfil)\n        resolve(data)\n      }).catch(err => {\n        context.commit(PERFILES_ERROR)\n        reject(err)\n      })\n    })\n  },\n  savePerfil: (context, datos) => {\n    let clientId = datos.clientId\n    let body = {\n      nombre: datos.nombre || 'sin_data',\n      descripcion: datos.descripcion || 'sin_data',\n      urlImagen: datos.urlImagen || 'rat'\n    }\n    return new Promise((resolve, reject) => {\n      perfilesApi.postPerfil(clientId, body).then(data => {\n        context.commit(PUT_PERFIL, data.data)\n        resolve(data)\n      }).catch(err => {\n        console.error(err.data.error.toString())\n        context.commit(PERFILES_ERROR)\n        reject('Error al crear el perfil, intentelo m√°s tarde')\n      })\n    })\n  },\n  patchPerfil: (context, datos) => {\n    let clientId = datos.clientId\n    let idPerfil = datos.idPerfil\n    let body = {\n      nombre: datos.nombre || 'sin_data',\n      descripcion: datos.descripcion || 'sin_data',\n      urlImagen: datos.urlImagen || 'rat'\n    }\n    return new Promise((resolve, reject) => {\n      perfilesApi.patchPerfil(clientId, idPerfil, body).then(data => {\n        context.commit(PATCH_PERFIL, data.data)\n        resolve(data)\n      }).catch(err => {\n        context.commit(PERFILES_ERROR)\n        reject(err)\n      })\n    })\n  }\n}\n\nexport default {\n  state,\n  getters,\n  actions,\n  mutations\n}\n"]}]}