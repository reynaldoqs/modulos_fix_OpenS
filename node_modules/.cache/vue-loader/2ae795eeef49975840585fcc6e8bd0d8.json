{"remainingRequest":"/home/reynaldo/Escritorio/interoparabilidad/interope-cliente/iop-plataforma-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/reynaldo/Escritorio/interoparabilidad/interope-cliente/iop-plataforma-frontend/src/Usuario/components/composicion/SearchBar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/reynaldo/Escritorio/interoparabilidad/interope-cliente/iop-plataforma-frontend/src/Usuario/components/composicion/SearchBar.vue","mtime":1544130576774},{"path":"/home/reynaldo/Escritorio/interoparabilidad/interope-cliente/iop-plataforma-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/reynaldo/Escritorio/interoparabilidad/interope-cliente/iop-plataforma-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/reynaldo/Escritorio/interoparabilidad/interope-cliente/iop-plataforma-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/reynaldo/Escritorio/interoparabilidad/interope-cliente/iop-plataforma-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Parametro from \"./SearchBarParametro\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  data: () => ({\n    query: \"\",\n    searchBy: 1,\n    filterBy: [],\n    searchOptions: [\n      { label: \"Parametro\", value: 1 },\n      { label: \"Descripcion\", value: 2 },\n      { label: \"Palabras Clave\", value: 3 }\n    ]\n  }),\n  props: {\n    composicionModel: Object,\n    serviciosList: Array\n  },\n  watch: {\n    query(newValue) {\n      this.sendQuery();\n    },\n    filterBy(newValue) {\n      this.$emit(\"filterChange\", this.filterBy);\n    },\n    searchBy(newValue) {\n      this.sendQuery();\n    }\n  },\n  methods: {\n    handlerFunction(data) {\n      console.log(data);\n    },\n    sendQuery() {\n      this.$emit(\"onQuery\", {\n        query: this.query,\n        searchBy: this.searchBy\n      });\n    },\n    hasDuplicates(array) {\n      return new Set(array).size !== array.length;\n    }\n  },\n  computed: {\n    servicios() {\n      let controllers = this.serviciosList.filter(data => data);\n\n      return controllers\n        .filter(\n          (item, pos) => controllers.map(a => a._id).indexOf(item._id) == pos\n        )\n        .map(data => ({ label: data.nombre, value: data._id }));\n    },\n    parametrosSalida() {\n      if (this.composicionModel.rutas.length > 0) {\n        let paramSalida = this.composicionModel.rutas\n          .map(ruta => {\n            return ruta.parametrosRespuesta.map(\n              param => param.parametroRespuesta\n            );\n          })\n          .reduce((count, item) => [...count, ...item]);\n        if (this.hasDuplicates(paramSalida.map(a => a.nombre))) {\n          this.$q.dialog({\n            title: \"Parámetro duplicado\",\n            message: \"Ya tiene un parámetro de salida con el mismo key\",\n            ok: \"Aceptar\",\n            color: \"grey\"\n          });\n        }\n        return paramSalida;\n      }\n      return [];\n    },\n    parametrosEntrada() {\n      if (this.composicionModel.rutas.length > 0) {\n        let allParametros = this.composicionModel.rutas\n          .map(ruta => {\n            return ruta.parametrosEntrada;\n          })\n          .reduce((count, item) => [...count, ...item]);\n\n        return allParametros.filter(\n          (item, pos) =>\n            allParametros.map(a => a.nombre).indexOf(item.nombre) == pos\n        );\n      }\n      return [];\n    },\n    serviciosSeleccionados() {\n      if (this.composicionModel.rutas.length > 0) {\n        let servicios = this.composicionModel.rutas.map(ruta =>\n          ruta.servicio\n            ? ruta.servicio.nombre\n            : console.log(\"ruta sin servicio\")\n        );\n        return servicios.filter((item, pos) => servicios.indexOf(item) == pos);\n      }\n      return [];\n    },\n    rutasSeleccionadas() {\n      if (this.composicionModel.rutas.length > 0) {\n        return this.composicionModel.rutas.map(ruta => ruta.ruta.nombre);\n      }\n      return [];\n    },\n    ...mapGetters([\"currentUser\", \"currentPerfil\"])\n  },\n  components: {\n    Parametro\n  }\n};\n",{"version":3,"sources":["SearchBar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SearchBar.vue","sourceRoot":"src/Usuario/components/composicion","sourcesContent":["<template>\n  <div class=\"search-bar dark-theme\">\n    <div class=\"search-bar-information\">\n      <div>\n        <div\n          class=\"search-avatar-img\"\n          :style=\"{backgroundImage:'url('+require('../../../assets/iop-'+currentPerfil.urlImagen+'.jpg')+')'}\"\n        ></div>\n      </div>\n      <div>\n        <span class=\"search-bar-user\">{{currentUser.accesos.usuario}}</span>\n        <span class=\"search-bar-perfil\">{{currentPerfil.nombre}}</span>\n      </div>\n    </div>\n    <hr class=\"separator\">\n    <div class=\"search-options row\">\n      <div class=\"col-4\">\n        <div class=\"label-text\">Buscar parámetro:</div>\n      </div>\n      <div class=\"col-8\">\n        <!--        <q-input\n          type=\"search\"\n          color=\"tertiary\"\n          placeholder=\"Buscar...\"\n          v-model=\"query\"\n          @keyup.enter=\"sendQuery\"\n          @clear=\"sendQuery\"\n          inverted\n          clearable\n          :after=\"[\n            {\n              icon: 'search',\n              error: false,\n              handler () {\n                sendQuery()\n              }\n            }\n          ]\"\n        />-->\n        <q-search\n          v-model=\"query\"\n          inverted\n          color=\"tertiary\"\n          :debounce=\"600\"\n          placeholder=\"Buscar...\"\n          icon=\"search\"\n          clearable\n        />\n      </div>\n    </div>\n    <div class=\"search-options row\">\n      <div class=\"col-4\">\n        <div class=\"label-text\">Busqueda por:</div>\n      </div>\n      <div class=\"col-8\">\n        <q-select inverted color=\"tertiary\" v-model=\"searchBy\" :options=\"searchOptions\"/>\n      </div>\n    </div>\n    <hr class=\"separator\">\n    <q-select\n      inverted\n      color=\"tertiary\"\n      placeholder=\"Filtrar servicios\"\n      v-model=\"filterBy\"\n      multiple\n      :options=\"servicios\"\n    />\n\n    <hr class=\"separator\">\n    <div class=\"label-text\">Parametros de Salida</div>\n    <div class=\"parametros-container\">\n      <div\n        v-show=\"!parametrosSalida.length > 0\"\n        class=\"no-result-message\"\n      >No tiene parámetros seleccionados</div>\n      <parametro\n        v-for=\"parametro in parametrosSalida\"\n        :key=\"parametro._id\"\n        :nombre=\"parametro.nombre\"\n        tipo=\"respuesta\"\n        ubicacion=\"body\"\n        @onDelete=\"$emit('onDelete',parametro._id)\"\n      />\n    </div>\n    <hr class=\"separator\">\n    <div class=\"label-text\">Parametros de entrada</div>\n    <div class=\"parametros-container\">\n      <div\n        v-show=\"!parametrosSalida.length > 0\"\n        class=\"no-result-message\"\n      >No tiene parámetros de entrada</div>\n      <parametro\n        v-for=\"parametro in parametrosEntrada\"\n        :key=\"parametro._id\"\n        :nombre=\"parametro.nombre\"\n        tipo=\"entrada\"\n        :ubicacion=\"parametro.ubicacion\"\n      />\n    </div>\n    <hr class=\"separator\">\n    <div class=\"label-text\">Servicios</div>\n    <div class=\"parametros-container\">\n      <div\n        v-show=\"!serviciosSeleccionados.length > 0\"\n        class=\"no-result-message\"\n      >No tiene parámetros seleccionados</div>\n      <span\n        v-for=\"(servicio, index) in serviciosSeleccionados\"\n        :key=\"index\"\n        class=\"small-list\"\n      >{{servicio}}</span>\n    </div>\n    <hr class=\"separator\">\n    <div class=\"label-text\">Rutas</div>\n    <div class=\"parametros-container\">\n      <div\n        v-show=\"!rutasSeleccionadas.length > 0\"\n        class=\"no-result-message\"\n      >No tiene parámetros seleccionados</div>\n      <span v-for=\"(ruta, index) in rutasSeleccionadas\" :key=\"index\" class=\"small-list\">{{ruta}}</span>\n    </div>\n    <!-- <div class=\"gosht-div\">\n    </div>-->\n  </div>\n</template>\n<script>\nimport Parametro from \"./SearchBarParametro\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  data: () => ({\n    query: \"\",\n    searchBy: 1,\n    filterBy: [],\n    searchOptions: [\n      { label: \"Parametro\", value: 1 },\n      { label: \"Descripcion\", value: 2 },\n      { label: \"Palabras Clave\", value: 3 }\n    ]\n  }),\n  props: {\n    composicionModel: Object,\n    serviciosList: Array\n  },\n  watch: {\n    query(newValue) {\n      this.sendQuery();\n    },\n    filterBy(newValue) {\n      this.$emit(\"filterChange\", this.filterBy);\n    },\n    searchBy(newValue) {\n      this.sendQuery();\n    }\n  },\n  methods: {\n    handlerFunction(data) {\n      console.log(data);\n    },\n    sendQuery() {\n      this.$emit(\"onQuery\", {\n        query: this.query,\n        searchBy: this.searchBy\n      });\n    },\n    hasDuplicates(array) {\n      return new Set(array).size !== array.length;\n    }\n  },\n  computed: {\n    servicios() {\n      let controllers = this.serviciosList.filter(data => data);\n\n      return controllers\n        .filter(\n          (item, pos) => controllers.map(a => a._id).indexOf(item._id) == pos\n        )\n        .map(data => ({ label: data.nombre, value: data._id }));\n    },\n    parametrosSalida() {\n      if (this.composicionModel.rutas.length > 0) {\n        let paramSalida = this.composicionModel.rutas\n          .map(ruta => {\n            return ruta.parametrosRespuesta.map(\n              param => param.parametroRespuesta\n            );\n          })\n          .reduce((count, item) => [...count, ...item]);\n        if (this.hasDuplicates(paramSalida.map(a => a.nombre))) {\n          this.$q.dialog({\n            title: \"Parámetro duplicado\",\n            message: \"Ya tiene un parámetro de salida con el mismo key\",\n            ok: \"Aceptar\",\n            color: \"grey\"\n          });\n        }\n        return paramSalida;\n      }\n      return [];\n    },\n    parametrosEntrada() {\n      if (this.composicionModel.rutas.length > 0) {\n        let allParametros = this.composicionModel.rutas\n          .map(ruta => {\n            return ruta.parametrosEntrada;\n          })\n          .reduce((count, item) => [...count, ...item]);\n\n        return allParametros.filter(\n          (item, pos) =>\n            allParametros.map(a => a.nombre).indexOf(item.nombre) == pos\n        );\n      }\n      return [];\n    },\n    serviciosSeleccionados() {\n      if (this.composicionModel.rutas.length > 0) {\n        let servicios = this.composicionModel.rutas.map(ruta =>\n          ruta.servicio\n            ? ruta.servicio.nombre\n            : console.log(\"ruta sin servicio\")\n        );\n        return servicios.filter((item, pos) => servicios.indexOf(item) == pos);\n      }\n      return [];\n    },\n    rutasSeleccionadas() {\n      if (this.composicionModel.rutas.length > 0) {\n        return this.composicionModel.rutas.map(ruta => ruta.ruta.nombre);\n      }\n      return [];\n    },\n    ...mapGetters([\"currentUser\", \"currentPerfil\"])\n  },\n  components: {\n    Parametro\n  }\n};\n</script>\n\n<style scoped>\n.gosht-div {\n  height: 40px;\n}\n.search-bar {\n  width: 100%;\n  min-height: 100%;\n  background-color: var(--bg-content);\n  padding: 14px;\n}\n.search-options:not(:last-child) {\n  margin-bottom: 12px;\n}\n.parametros-container {\n  padding: 15px 0 0 0;\n  display: block;\n  width: 100%;\n}\n.small-list {\n  color: #8181c1;\n  font-size: 0.84em;\n  cursor: pointer;\n  line-height: 1.6em;\n  display: block;\n}\n.small-list:hover {\n  text-decoration: underline;\n}\n/* .small-list:not(:last-child)::after {\n  content: \", \";\n} */\n.search-avatar-img {\n  width: 100%;\n  height: 100%;\n  background-color: var(--iop-primary);\n  border-radius: 50%;\n  background-size: cover;\n  opacity: 0.5;\n  filter: grayscale(40%);\n  transition: 0.5s all ease;\n}\n.no-result-message {\n  font-size: 10px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  color: #717181;\n}\n.search-bar-information {\n  padding: 2px 10px 0 4px;\n  display: flex;\n  align-items: center;\n}\n.search-bar-information > div:first-child {\n  width: 40px;\n  height: 40px;\n}\n.search-bar-user {\n  display: block;\n  margin-left: 10px;\n  font-size: 0.9em;\n}\n.search-bar-perfil {\n  display: block;\n  margin-left: 10px;\n  font-size: 0.8em;\n  color: #717181;\n}\n</style>\n"]}]}